{"version":3,"sources":["../../src/js/initBracket.js"],"names":["userTimezone","moment","tz","guess","Element","tag","className","content","el","document","createElement","innerHTML","_el","childs","propertyNames","length","appendChild","propertyName","push","shift","Match","name","header","matchDate","matchName","append","participants","index","player","setName","date","actualDate","_date","innerText","utc","format","setDate","players","slot","hasOwnProperty","f","i","id","n","next","r","undefined","slotToFill","updatePlayers","winLoses","nextMatches","Round","roundIndex","upperMatchNames","lowerMatchNames","String","padStart","upperMatches","lowerMatches","Bracket","rounds","roundsArr","Array","from","arguments","matches","round","side","match","matchResult","result","currentMatch","m","winnerMatch","loserMatch","isArray","winners","losers","hasWon","nextMatch","playerFinished","forEach","addPlayerToEmptySlot"],"mappings":"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","file":"initBracket.js","sourcesContent":["const userTimezone = moment.tz.guess();\n\nclass Element {\n  constructor(tag, className, content) {\n    const el = document.createElement(tag);\n    el.className = className? className: '';\n    el.innerHTML = content? content: '';\n\n    this._el = el;\n  }\n\n  append(childs, propertyNames) {\n    if(\n      !childs.length ||\n      (\n        propertyNames &&\n        typeof propertyNames !== 'string' &&\n        childs.length !== propertyNames.length\n      )\n    )\n      return this;\n\n    if(childs.length === 1) {\n      this._el.appendChild(childs[0]._el);\n      if(propertyNames) {\n        if(typeof propertyNames === 'string') {\n          const propertyName = propertyNames;\n          if(!this[propertyName]) this[propertyName] = [];\n          this[propertyName].push(childs[0]);\n        } else {\n          const propertyName = propertyNames[0];\n          this[propertyName] = childs[0];\n        }\n      } else {\n        const propertyName = childs[0]._el.className;\n        this[propertyName] = childs[0];\n      }\n    } else {\n      if(propertyNames) {\n        if(typeof propertyNames === 'string') {\n          const propertyName = propertyNames;\n          if(!this[propertyName])\n            this[propertyName] = [];\n          while(childs.length) {\n            this._el.appendChild(childs[0]._el);\n            this[propertyName].push(childs.shift());\n          }\n        } else {\n          while(childs.length) {\n            this._el.appendChild(childs[0]._el);\n            this[propertyNames.shift()] = childs.shift();\n          }\n        }\n      } else {\n        while(childs.length) {\n          this._el.appendChild(childs[0]._el);\n          this[childs[0]._el.className] = childs.shift();\n        }\n      }\n    }\n    return this;\n  }\n}\n\nclass Match extends Element {\n  constructor(name) {\n    super('div', 'match');\n\n    const header = new Element('div', 'header');\n    const matchDate = new Element('div', 'matchDate');\n    const matchName = new Element('span', 'matchName');\n\n    header.append([\n      matchDate,\n      matchName\n    ]);\n\n    const participants = new Element('div', 'participants');\n\n    for(let index = 1; index <= 4; index++) {\n      let player = new Element('div');\n      player.append([\n        new Element('span', 'from'),\n        new Element('span', 'id'),\n        new Element('span', 'next')\n      ]);\n      participants.append([player], [`${index}`]);\n    }\n\n    this.append([\n      header,\n      participants\n    ]);\n\n    if(name) this.setName(name);\n  }\n\n  setDate(date, actualDate = true) {\n    if(!date) return this;\n    if(!actualDate) {\n      this._date = date;\n      this.header.matchDate._el.innerText = date;\n      return this;\n    }\n    this._date = moment.utc(date);\n    this.header.matchDate._el.innerText =\n      this._date.tz(userTimezone).format('ddd D, HH:mm');\n    return this;\n  }\n\n  setName(name) {\n    if(name) this.header.matchName._el.innerText = name;\n    return this;\n  }\n\n  get date() {\n    return this._date;\n  }\n\n  get name() {\n    return this.header.matchName._el.innerText;\n  }\n\n  set(date, name) {\n    this.setDate(date);\n    this.setName(name);\n    return this;\n  }\n  /**\n   * update player information in the match.\n   *\n   * @param {object} players object about player information,\n   * following the format below.\n   * Every property is optional, specify the property you want to update.\n   * {\n   *  1: {from:String, name:String, next:String}\n   *  2: {from:String, name:String, next:String}\n   *  3: {from:String, name:String, next:String}\n   *  4: {from:String, name:String, next:String}\n   * }\n   */\n  updatePlayers(players) {\n    for(let slot in players) {\n      if(\n        !players.hasOwnProperty(slot) ||\n        slot < 1 || slot > 4\n      ) continue;\n      let player = players[slot];\n      if(player.f)\n        this.participants[slot]['from']._el.innerText = player.f;\n      if(player.i)\n        this.participants[slot].id._el.innerText = player.i;\n      if(player.n)\n        this.participants[slot].next._el.innerText = player.n;\n      if(player.r !== undefined)\n        this.participants[slot]._el.className =\n          player.r? 'won': 'lost';\n    }\n    return this;\n  }\n\n  addPlayerToEmptySlot(player) {\n    let slotToFill = 1;\n    while(this.participants[slotToFill].id._el.innerText) {\n      slotToFill++;\n    }\n    if (slotToFill > 4) return this;\n    this.updatePlayers({[slotToFill]: player});\n    return this;\n  }\n\n  /**\n   *\n   * @param {Boolean[]} winLoses\n   * @param {String[]} nextMatches\n   */\n  updateResult(winLoses, nextMatches) {\n    for(let index = 1; index <= winLoses.length; index++) {\n      this.participants[index]._el.className =\n        winLoses[index-1]? 'won': 'lost';\n      this.participants[index].next._el.innerText = nextMatches[winLoses[index-1]? 0: 1];\n    }\n  }\n}\n\nclass Round extends Element {\n  constructor(roundIndex, upperMatchNames, lowerMatchNames) {\n    super('div', 'round');\n    this._el.id =\n      `round${String(roundIndex).padStart(2, '0')}`;\n\n    this.append([\n      new Element('div', 'roundNumber', `Round ${roundIndex}`)\n    ]);\n\n    const upperMatches = new Element('div', 'matches upper');\n    for(let index = 1; index <= upperMatchNames.length; index++) {\n      const matchName = upperMatchNames[index-1];\n      upperMatches.append([new Match(matchName)], [`${index}`]);\n    }\n    const lowerMatches = new Element('div', 'matches lower');\n    for(let index = 1; index <= lowerMatchNames.length; index++) {\n      const matchName = lowerMatchNames[index-1];\n      lowerMatches.append([new Match(matchName)], [`${index}`]);\n    }\n\n    this.append(\n      [upperMatches, lowerMatches],\n      ['upper', 'lower']\n    );\n  }\n}\n\nclass Bracket extends Element {\n  constructor(rounds) {\n    super('div');\n    this._el.id = 'bracket';\n    this.rounds = [ undefined ];\n\n    let roundIndex = 1;\n    const roundsArr = Array.from(arguments);\n\n    while(roundsArr.length) {\n      const matches = roundsArr.shift();\n      this.append(\n        [new Round(roundIndex++, matches[0], matches[1])],\n        'rounds'\n      );\n    }\n  }\n\n  m(round, side, match) {\n    return this\n      .rounds[round][side? 'upper': 'lower'][match];\n  }\n\n  /**\n   *\n   * @param {Object} matchResult\n   * @param {number[]} matchResult.match\n   * @param {number[]} matchResult.result\n   * @param {(number[]|string|null)[]} matchResult.nextMatch\n   * @returns {Bracket}\n   */\n  updateResult(matchResult) {\n    let {match, result, next} = matchResult;\n    if(!result) return this;\n    let currentMatch = this.m(...match);\n    let winnerMatch, loserMatch;\n    if(Array.isArray(next[0])) {\n      winnerMatch = this.m(...next[0]);\n    } else if(typeof next[0] === 'string' || next[0] === null) {\n      winnerMatch = next[0];\n    } else {\n      return this;\n    }\n    if(Array.isArray(next[1])) {\n      loserMatch = this.m(...next[1]);\n    } else if(typeof next[1] === 'string' || next[1] === null) {\n      loserMatch = next[1];\n    } else {\n      return this;\n    }\n    const winners = [];\n    const losers = [];\n\n    for(let index = 1; index <= result.length; index++) {\n      const hasWon = result[index-1];\n      const nextMatch = hasWon? winnerMatch: loserMatch;\n      const playerFinished =\n        typeof nextMatch === 'string' || nextMatch === null;\n      currentMatch.participants[index]\n        ._el.className = hasWon? 'won': 'lost';\n\n      currentMatch.participants[index]\n        .next._el.innerText = playerFinished?\n          nextMatch: nextMatch.name;\n\n      if(!playerFinished) {\n        if(hasWon)\n          winners.push(currentMatch.participants[index].id._el.innerText);\n        else\n          losers.push(currentMatch.participants[index].id._el.innerText);\n      }\n    }\n    if(typeof winnerMatch !== 'string' && winnerMatch !== null)\n      winners.forEach(name => {\n        winnerMatch.addPlayerToEmptySlot({\n          f: currentMatch.name, i: name\n        });\n      });\n    if(typeof loserMatch !== 'string' && loserMatch !== null)\n      losers.forEach(name => {\n        loserMatch.addPlayerToEmptySlot({\n          f: currentMatch.name, i: name\n        });\n      });\n\n    return this;\n  }\n}\n"]}